package bst;

/**
 * KPI- FPM - PZKS Course: Algorithms and Data Structures (2) Laboratory work 5
 * 
 * @author Olena Khomenko <br>
 *         Represents information about student: its name and number of course <br>
 *         This class is a sample how to define class, fields and methods
 * 
 *         Rewrite this class and its methods <br>
 *         Choose information to be saved in a class from lab manuals (table 1,
 *         col.2).<br>
 * 
 *         Write methods setXXX to set specified value to the field XXX. <br>
 * 
 *         Write method print to output information about student (values of the
 *         fields) in formatted string. <br>
 * 
 *         Write static methods boolean isValidXXX to check whether specified
 *         string could set (or convert and set) to the field XXX
 *
 */

public class Student {

	private int course;
	private String sex;
	private String name;
	private String surname;
	private int cardNumber;
	private String livingPlace;
	
	public Student (int cardNumber,
					int course,
					String sex,
					String name,
					String surname,
					String livingPlace) {
		this.cardNumber = cardNumber;
		this.course = course;
		this.sex = sex;
		this.name = name;
		this.surname = surname;
		this.livingPlace = livingPlace;
	}

	public int getkey() {
		return cardNumber;
	}
	
	public void setCardNumber (int cardNumber) {
		this.cardNumber = cardNumber;
	}
	public void setCourse (int course) {
		this.course = course;
	}
	public void setSex (String sex) {
		this.sex = sex;
	}
	public void setName (String name) {
		this.name = name;
	}
	public void setSurname (String surname) {
		this.surname = surname;
	}
	public void setLivingPlace (String livingPlace) {
		this.livingPlace = livingPlace;
	}
	
	@Override
	public String toString() {
		return String.format ("%-10d|%-10d|%-10d|%-10d|%-10d|%-10d|\n", cardNumber,
																		name,
																		surname,
																		sex,
																		course,
																		livingPlace);
	}

	/**
	 * Determines if the specified string is valid card number: contains only
	 * one digit character
	 * 
	 * @param number
	 *            the string to be tested
	 * @return true if the specified string is a valid card number, false
	 *         otherwise.
	 */
	public static boolean isValidCardNumber(String number) {
		char[] chArray = number.toCharArray();
		for (char ch : chArray) {
			if (!Character.isDigit(ch)) {
				return false;
			}
		}
		return true;

	}
	
	public static boolean isValidCourse(String course) {
		char[] chArray = course.toCharArray();
		for (char ch : chArray) {
			if (!Character.isDigit(ch)) {
				return false;
			}
		}
		
		if (Integer.parseInt(course) > 0)
		{
			if (Integer.parseInt(course) < 7)
				return true;
		}
		
		return false;
	}
	
	public static boolean isValidSex(String sex) {
		System.out.println("I'm about to test sex");
		char[] chArray = sex.toCharArray();
		
		for (char ch : chArray) {
			if (!Character.isAlphabetic(ch)) {
				return false;
			}
		}
		
		if (!sex.equalsIgnoreCase("male"))
		{
			if (!sex.equalsIgnoreCase("female"))
			{
				return false;
			}
		}
		return true;

	}
	
	public static boolean isValidName(String name) {
		char[] chArray = name.toCharArray();
		for (char ch : chArray) {
			if (!Character.isAlphabetic(ch)) {
				return false;
			}
		}
		return true;

	}
	
	public static boolean isValidSurname(String surname) {
		char[] chArray = surname.toCharArray();
		for (char ch : chArray) {
			if (!Character.isAlphabetic(ch)) {
				return false;
			}
		}
		return true;

	}
	
	public static boolean isValidLivingPlace(String livingPlace) {
		char[] chArray = livingPlace.toCharArray();
		for (char ch : chArray) {
			if (!Character.isAlphabetic(ch)) {
				return false;
			}
		}
		if (!livingPlace.equalsIgnoreCase("dormitory"))
		{
			if (!livingPlace.equalsIgnoreCase("apartment"))
			{
				return false;
			}
		}
		return true;
	}
	

}
